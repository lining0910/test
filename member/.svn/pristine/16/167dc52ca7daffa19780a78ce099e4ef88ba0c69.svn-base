package com.taole.member.service.api;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiParam;

import org.apache.commons.lang3.StringUtils;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
import com.taole.framework.rest.RestUrlRuler;
import com.taole.framework.rest.ReturnResult;
import com.taole.framework.service.ServiceResult;
import com.taole.member.ProjectConfig;
import com.taole.member.condition.ShopCardCondition;
import com.taole.member.domain.param.ShopCardApi.Query;
import com.taole.member.manager.ShopCardManager;

@Controller
@Api(tags = { "客户端店铺会员卡接口管理" })
@RequestMapping(value = RestUrlRuler.REST_ROOT + "/" + ProjectConfig.PREFIX + "ShopCardApi")
public class ShopCardApi {
	
	private Logger logger = LoggerFactory.getLogger(ShopCardApi.class);
	
	@Autowired
	private ShopCardManager shopCardManager;

	@RequestMapping(value = "/collection/query", method = RequestMethod.GET, produces = "application/json;")
	@ApiOperation(value = "获取店铺会员卡信息列表", httpMethod = "GET", response = Query.ShopCardApiQueryRsp.class)
	public @ResponseBody Object query(HttpServletRequest request, HttpServletResponse response,
			@ApiParam(value = "分页参数，开始行数从0开始", required = true, defaultValue = "0") @RequestParam int start,
			@ApiParam(value = "分页参数，每页显示条数", required = true, defaultValue = "25") @RequestParam int limit,
			@ModelAttribute Query.ShopCardApiQueryReq req){
		
		try {
			
			if(StringUtils.isBlank(req.getShopId())){
				return new ServiceResult(ReturnResult.VALIDATION_ERROR, "店铺ID不能为空");
			}
			
			ShopCardCondition condition = new ShopCardCondition();
			condition.setCardType(req.getCardType());
			condition.setShopId(req.getShopId());
			
			JSONArray resultAry = shopCardManager.shopCardList(condition, start, limit);
			
			JSONObject resultObj = new JSONObject();
			resultObj.put("items", resultAry);
			resultObj.put("total", shopCardManager.shopCardCount(condition));
			
			return new ServiceResult(ReturnResult.SUCCESS, "店铺会员卡获取成功", resultObj);
		} catch (Exception e) {
			
			logger.error(ProjectConfig.PREFIX + "ShopGoodsApi" + ".query:{}", e);
			return new ServiceResult(ReturnResult.FAILURE, "店铺会员卡获取失败: " + e.getMessage());
		}
	}
}
