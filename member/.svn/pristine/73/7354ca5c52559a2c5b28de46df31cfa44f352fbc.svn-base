/**
 * Project:member
 * File:FooCondition.java 
 * Copyright 2014-2016 Bei Jing Yi Sheng Jia Technology Development Co., Ltd. All rights reserved.
 */
package com.taole.member.condition;

import java.util.Date;

import org.apache.commons.lang3.StringUtils;
import org.hibernate.criterion.DetachedCriteria;
import org.hibernate.criterion.Restrictions;

import com.taole.framework.dao.hibernate.HibernateCondition;

public class UserBillCondition implements HibernateCondition {

	private String cardNo;

	private String userCardId;
	
	private String userId;
	
	private String actionTypeId;
	
	private String payType;
	
	private String operatorShopId;
	
	private String name;
	
	private Date startTime, endTime;
	private String [] operatorShopIds;
	
	private String neActionTypeId;
	

	public String[] getOperatorShopIds() {
		return operatorShopIds;
	}

	public void setOperatorShopIds(String[] operatorShopIds) {
		this.operatorShopIds = operatorShopIds;
	}

	public String getOperatorShopId() {
		return operatorShopId;
	}

	public void setOperatorShopId(String operatorShopId) {
		this.operatorShopId = operatorShopId;
	}

	public String getActionTypeId() {
		return actionTypeId;
	}

	public void setActionTypeId(String actionTypeId) {
		this.actionTypeId = actionTypeId;
	}

	public String getPayType() {
		return payType;
	}

	public void setPayType(String payType) {
		this.payType = payType;
	}

	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public Date getStartTime() {
		return startTime;
	}

	public void setStartTime(Date startTime) {
		this.startTime = startTime;
	}

	public Date getEndTime() {
		return endTime;
	}

	public void setEndTime(Date endTime) {
		this.endTime = endTime;
	}

	public String getCardNo() {
		return cardNo;
	}

	public void setCardNo(String cardNo) {
		this.cardNo = cardNo;
	}

	public String getUserCardId() {
		return userCardId;
	}

	public void setUserCardId(String userCardId) {
		this.userCardId = userCardId;
	}

	public String getUserId() {
		return userId;
	}

	public void setUserId(String userId) {
		this.userId = userId;
	}

	public String getNeActionTypeId() {
		return neActionTypeId;
	}

	public void setNeActionTypeId(String neActionTypeId) {
		this.neActionTypeId = neActionTypeId;
	}

	@Override
	public void populateDetachedCriteria(DetachedCriteria criteria) {
		if (StringUtils.isNotBlank(cardNo)) {
			criteria.add(Restrictions.eq("cardNo", cardNo));
		}
		if (StringUtils.isNotBlank(operatorShopId)) {
			criteria.add(Restrictions.eq("operatorShopId", operatorShopId));
		}
		if (operatorShopIds!=null && operatorShopIds.length>0) {
			criteria.add(Restrictions.in("operatorShopId", operatorShopIds));
		}
		if (StringUtils.isNotBlank(userCardId)) {
			criteria.add(Restrictions.eq("userCardId", userCardId));
		}
		if (StringUtils.isNotBlank(payType)) {
			criteria.add(Restrictions.eq("payType", payType));
		}
		if (StringUtils.isNotBlank(actionTypeId)) {
			criteria.add(Restrictions.eq("actionTypeId", actionTypeId));
		}
		if (StringUtils.isNotBlank(userId)) {
			criteria.add(Restrictions.eq("userId", userId));
		}
		
		if (startTime != null && endTime != null)
			criteria.add(Restrictions.and(Restrictions.ge("operateTime", startTime), Restrictions.le("operateTime", endTime)));
		else if (startTime != null)
			criteria.add(Restrictions.ge("operateTime", startTime));
		else if (endTime != null)
			criteria.add(Restrictions.le("operateTime", endTime));
		
		
		if(StringUtils.isNotBlank(neActionTypeId)){
			criteria.add(Restrictions.ne("actionTypeId", neActionTypeId));
		}
			
	}

}
