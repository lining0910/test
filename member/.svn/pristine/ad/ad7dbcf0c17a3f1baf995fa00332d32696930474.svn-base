package com.taole.member.manager;

import java.sql.SQLException;
import java.util.List;

import javax.annotation.Resource;

import org.hibernate.HibernateException;
import org.hibernate.SQLQuery;
import org.hibernate.Session;
import org.springframework.orm.hibernate3.HibernateCallback;
import org.springframework.orm.hibernate3.support.HibernateDaoSupport;
import org.springframework.stereotype.Component;

import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
import com.taole.framework.dao.DomainObjectDao;
import com.taole.member.ProjectConfig;
import com.taole.member.condition.ShopCardCondition;
import com.taole.member.domain.ShopStoreSet;
import com.taole.member.sql.CommonSql;
import com.taole.member.sql.ShopCardSql;

@Component
public class ShopCardManager {

	@Resource(name = ProjectConfig.PREFIX + "shopStoreSetDao")
	DomainObjectDao<ShopStoreSet> shopStoreSetDao;
	
	public Integer shopCardCount(final ShopCardCondition condition){
		List<?> list = ((HibernateDaoSupport) shopStoreSetDao).getHibernateTemplate().executeWithNativeSession(new HibernateCallback<List<?>>() {
			@Override
			public List<?> doInHibernate(Session session) throws HibernateException, SQLException {
				String sql = ShopCardSql.shopGoodsList(condition);
				sql = CommonSql.count(sql);
				SQLQuery sqlQuery = session.createSQLQuery(sql);
				List<?> list = sqlQuery.list();
				return list;
			}
		});
		return Integer.valueOf(list.get(0).toString());
	}
	
	public JSONArray shopCardList(final ShopCardCondition condition, final int start, final int limit){
		
		List<?> shopGoodsList = ((HibernateDaoSupport) shopStoreSetDao).getHibernateTemplate().executeWithNativeSession(new HibernateCallback<List<?>>() {
			@Override
			public List<?> doInHibernate(Session session) throws HibernateException, SQLException {
				String sql = ShopCardSql.shopGoodsList(condition);
				SQLQuery sqlQuery = session.createSQLQuery(sql);
				sqlQuery.setFirstResult(start);
				sqlQuery.setMaxResults(limit);
				List<?> list = sqlQuery.list();
				return list;
			}
		});
		
		JSONArray resultAry = new JSONArray();
		for(int i=0; i<shopGoodsList.size(); i++){
			Object[] objs = (Object[]) shopGoodsList.get(i);
			JSONObject object = new JSONObject();
			object.put("cardId", objs[0]);
			object.put("goodsName", objs[1]);
			object.put("code", objs[2]);
			object.put("money", objs[3]);
			object.put("cardImage", objs[4]);
			
			resultAry.add(object);
		}
		
		return resultAry;
	}
}
